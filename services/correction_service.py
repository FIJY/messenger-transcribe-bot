# services/correction_service.py - –í–ï–†–°–ò–Ø –° –î–û–ü–û–õ–ù–ò–¢–ï–õ–¨–ù–û–ô –ü–û–°–¢-–û–ë–†–ê–ë–û–¢–ö–û–ô
import openai
import os
import logging
from typing import Optional

logger = logging.getLogger(__name__)


class CorrectionService:
    def __init__(self):
        api_key = os.getenv('OPENAI_API_KEY')
        if not api_key:
            raise ValueError("OPENAI_API_KEY –Ω–µ –Ω–∞–π–¥–µ–Ω –≤ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö –æ–∫—Ä—É–∂–µ–Ω–∏—è")
        try:
            self.client = openai.OpenAI(api_key=api_key)
            logger.info("CorrectionService: OpenAI –∫–ª–∏–µ–Ω—Ç —É—Å–ø–µ—à–Ω–æ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω")
        except Exception as e:
            logger.error(f"CorrectionService: –û—à–∏–±–∫–∞ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏ OpenAI: {e}")
            raise

    def correct_khmer_transliteration(self, latin_text: str) -> Optional[str]:
        """
        –ò—Å–ø–æ–ª—å–∑—É–µ—Ç GPT –¥–ª—è –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏—è –ª–∞—Ç–∏–Ω—Å–∫–æ–π —Ç—Ä–∞–Ω—Å–ª–∏—Ç–µ—Ä–∞—Ü–∏–∏ –Ω–∞ –Ω–∞—Ç–∏–≤–Ω—ã–π –∫—Ö–º–µ—Ä—Å–∫–∏–π —Å–∫—Ä–∏–ø—Ç.
        """
        if not latin_text:
            return None

        logger.info(f"–ó–∞–ø—É—Å–∫–∞–µ–º –∫–æ—Ä—Ä–µ–∫—Ü–∏—é —Ç—Ä–∞–Ω—Å–ª–∏—Ç–µ—Ä–∞—Ü–∏–∏ –¥–ª—è: {latin_text[:100]}...")
        system_prompt = (
            "You are a professional Khmer editor and proofreader. Your task is to take raw, transcribed spoken Khmer text and refine it into clean, grammatically correct, and formal written Khmer. "
            "You must perform the following actions:\n"
            "1. Remove filler words, stutters, and verbal tics (e.g., '·û¢·û∫', '·ûî·û∂·ûë', repeated words).\n"
            "2. Correct grammatical errors and fix sentence structure.\n"
            "3. Add appropriate punctuation.\n"
            "4. Rephrase colloquialisms and slang into their formal equivalents.\n"
            "5. **Crucially, correct words that are phonetically similar but misspelled.** For example, if you see '·ûü·ûº·ûü·û∂·ûô ·ûî·ûª·ûÑ' (sawsay bong), you must correct it to '·ûü·ûΩ·ûü·üí·ûè·û∏·ûî·ûÑ' (suosdey bong). If you see '·ûò·û∂·ûü·û∑·ûì ·ûö·üÑ·ûä' (meason rod), correct it to '·ûò·üâ·û∂·ûü·üä·û∏·ûì·ûö·ûè·üã' (masin rot).\n"
            "6. Do NOT change the core meaning or add new information.\n"
            "Return ONLY the cleaned, final Khmer text and nothing else."
        )
        try:
            corrected_text = self._call_gpt(system_prompt, latin_text)
            logger.info(f"–¢—Ä–∞–Ω—Å–ª–∏—Ç–µ—Ä–∞—Ü–∏—è —É—Å–ø–µ—à–Ω–æ —Å–∫–æ—Ä—Ä–µ–∫—Ç–∏—Ä–æ–≤–∞–Ω–∞.")
            return corrected_text
        except Exception as e:
            logger.error(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –∫–æ—Ä—Ä–µ–∫—Ü–∏–∏ —Ç—Ä–∞–Ω—Å–ª–∏—Ç–µ—Ä–∞—Ü–∏–∏: {e}", exc_info=True)
            return None

    # üîß –ù–û–í–´–ô –ú–ï–¢–û–î –î–õ–Ø "–ü–†–ò–ß–ï–°–´–í–ê–ù–ò–Ø" –¢–ï–ö–°–¢–ê
    def post_process_khmer_text(self, raw_text: str) -> Optional[str]:
        """
        –ò—Å–ø–æ–ª—å–∑—É–µ—Ç GPT –¥–ª—è –æ—á–∏—Å—Ç–∫–∏ –∏ —Ñ–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏—è —Å—ã—Ä–æ–≥–æ —Ç—Ä–∞–Ω—Å–∫—Ä–∏–±–∏—Ä–æ–≤–∞–Ω–Ω–æ–≥–æ –∫—Ö–º–µ—Ä—Å–∫–æ–≥–æ —Ç–µ–∫—Å—Ç–∞.
        –£–±–∏—Ä–∞–µ—Ç —Å–ª–æ–≤–∞-–ø–∞—Ä–∞–∑–∏—Ç—ã, –∏—Å–ø—Ä–∞–≤–ª—è–µ—Ç –≥—Ä–∞–º–º–∞—Ç–∏–∫—É, –¥–µ–ª–∞–µ—Ç —Ç–µ–∫—Å—Ç –ª–∏—Ç–µ—Ä–∞—Ç—É—Ä–Ω—ã–º.
        """
        if not raw_text:
            return None

        logger.info(f"–ó–∞–ø—É—Å–∫–∞–µ–º –ø–æ—Å—Ç-–æ–±—Ä–∞–±–æ—Ç–∫—É –∫—Ö–º–µ—Ä—Å–∫–æ–≥–æ —Ç–µ–∫—Å—Ç–∞: {raw_text[:100]}...")
        system_prompt = (
            "You are a professional Khmer editor. Your task is to take raw, transcribed spoken text and refine it into clean, "
            "grammatically correct, and formal written Khmer suitable for official documents and translation. "
            "You must perform the following actions:\n"
            "1. Remove filler words, stutters, and verbal tics (e.g., '·û¢·û∫', '·ûî·û∂·ûë', repeated words).\n"
            "2. Correct grammatical errors and fix sentence structure.\n"
            "3. Add appropriate punctuation.\n"
            "4. Rephrase colloquialisms and slang into their formal equivalents.\n"
            "5. Do NOT change the core meaning or add new information.\n"
            "Return ONLY the cleaned, final Khmer text and nothing else."
        )
        try:
            processed_text = self._call_gpt(system_prompt, raw_text)
            logger.info(f"–¢–µ–∫—Å—Ç —É—Å–ø–µ—à–Ω–æ –ø—Ä–æ—à–µ–ª –ø–æ—Å—Ç-–æ–±—Ä–∞–±–æ—Ç–∫—É.")
            return processed_text
        except Exception as e:
            logger.error(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ—Å—Ç-–æ–±—Ä–∞–±–æ—Ç–∫–µ —Ç–µ–∫—Å—Ç–∞: {e}", exc_info=True)
            return None

    def _call_gpt(self, system_prompt: str, user_content: str) -> Optional[str]:
        """–£–Ω–∏–≤–µ—Ä—Å–∞–ª—å–Ω—ã–π –º–µ—Ç–æ–¥ –¥–ª—è –≤—ã–∑–æ–≤–∞ Chat API."""
        response = self.client.chat.completions.create(
            model="gpt-3.5-turbo",
            messages=[
                {"role": "system", "content": system_prompt},
                {"role": "user", "content": user_content}
            ],
            temperature=0.2,  # –ù–∏–∑–∫–∞—è —Ç–µ–º–ø–µ—Ä–∞—Ç—É—Ä–∞ –¥–ª—è —Ç–æ—á–Ω–æ—Å—Ç–∏ –∏ –ø—Ä–µ–¥—Å–∫–∞–∑—É–µ–º–æ—Å—Ç–∏
            max_tokens=1500,
        )
        return response.choices[0].message.content